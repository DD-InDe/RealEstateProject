// <auto-generated />
using System;
using System.Collections;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RealtorSystemDesk.Database;

#nullable disable

namespace RealtorSystemDesk.Migrations
{
    [DbContext(typeof(RealtorSystemDbContext))]
    [Migration("20250105122103_Add_Columns_In_Client")]
    partial class Add_Columns_In_Client
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RealtorSystemDesk.Database.Client", b =>
                {
                    b.Property<int>("PassportId")
                        .HasColumnType("integer")
                        .HasColumnName("passport_id");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("first_name");

                    b.Property<char?>("GenderId")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("gender_id");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("middle_name");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("PassportId")
                        .HasName("client_pkey");

                    b.HasIndex("GenderId");

                    b.HasIndex("UserId");

                    b.ToTable("client", (string)null);
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.ClientDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("client_id");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("integer")
                        .HasColumnName("document_id");

                    b.HasKey("Id")
                        .HasName("client_document_pkey");

                    b.HasIndex("ClientId");

                    b.HasIndex("DocumentId");

                    b.ToTable("client_document", (string)null);
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("client_id");

                    b.Property<DateOnly?>("DateCreate")
                        .HasColumnType("date")
                        .HasColumnName("date_create");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employee_id");

                    b.Property<BitArray>("IsArchive")
                        .HasColumnType("bit(1)")
                        .HasColumnName("is_archive");

                    b.Property<int?>("TypeId")
                        .HasColumnType("integer")
                        .HasColumnName("type_id");

                    b.Property<DateOnly?>("ValidUntil")
                        .HasColumnType("date")
                        .HasColumnName("valid_until");

                    b.HasKey("Id")
                        .HasName("contract_pkey");

                    b.HasIndex("ClientId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TypeId");

                    b.ToTable("contract", (string)null);
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.ContractDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContractId")
                        .HasColumnType("integer")
                        .HasColumnName("contract_id");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("integer")
                        .HasColumnName("document_id");

                    b.HasKey("Id")
                        .HasName("contract_document_pkey");

                    b.HasIndex("ContractId");

                    b.HasIndex("DocumentId");

                    b.ToTable("contract_document", (string)null);
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.ContractType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("contract_type_pkey");

                    b.ToTable("contract_type", (string)null);
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("description");

                    b.Property<string>("FileName")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("file_name");

                    b.HasKey("Id")
                        .HasName("document_pkey");

                    b.ToTable("document", (string)null);
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.Gender", b =>
                {
                    b.Property<char>("Id")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("gender_pkey");

                    b.ToTable("gender", (string)null);
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("material_pkey");

                    b.ToTable("material", (string)null);
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.Passport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PassportIssuedBy")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("passport_issued_by");

                    b.Property<DateOnly?>("PassportIssuedDate")
                        .HasColumnType("date")
                        .HasColumnName("passport_issued_date");

                    b.Property<int?>("PassportNumber")
                        .HasColumnType("integer")
                        .HasColumnName("passport_number");

                    b.Property<int?>("PassportSerial")
                        .HasColumnType("integer")
                        .HasColumnName("passport_serial");

                    b.Property<DateOnly?>("PassportValidUntil")
                        .HasColumnType("date")
                        .HasColumnName("passport_valid_until");

                    b.HasKey("Id")
                        .HasName("passport_pkey");

                    b.ToTable("passport", (string)null);
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.RealEstateObject", b =>
                {
                    b.Property<int>("ContractId")
                        .HasColumnType("integer")
                        .HasColumnName("contract_id");

                    b.Property<string>("Address")
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)")
                        .HasColumnName("address");

                    b.Property<int?>("BuildingYear")
                        .HasColumnType("integer")
                        .HasColumnName("building_year");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("description");

                    b.Property<int?>("Floor")
                        .HasColumnType("integer")
                        .HasColumnName("floor");

                    b.Property<int?>("FloorsCount")
                        .HasColumnType("integer")
                        .HasColumnName("floors_count");

                    b.Property<BitArray>("IsArchive")
                        .HasColumnType("bit(1)")
                        .HasColumnName("is_archive");

                    b.Property<string>("Notes")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("notes");

                    b.Property<int?>("ObjectType")
                        .HasColumnType("integer")
                        .HasColumnName("object_type");

                    b.Property<decimal?>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("price");

                    b.Property<int?>("RoomsCount")
                        .HasColumnType("integer")
                        .HasColumnName("rooms_count");

                    b.Property<decimal?>("Square")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("square");

                    b.HasKey("ContractId")
                        .HasName("real_estate_object_pkey");

                    b.HasIndex("ObjectType");

                    b.ToTable("real_estate_object", (string)null);
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.RealEstateObjectDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DocumentId")
                        .HasColumnType("integer")
                        .HasColumnName("document_id");

                    b.Property<int?>("RealEstateObjectId")
                        .HasColumnType("integer")
                        .HasColumnName("real_estate_object_id");

                    b.HasKey("Id")
                        .HasName("real_estate_object_document_pkey");

                    b.HasIndex("DocumentId");

                    b.HasIndex("RealEstateObjectId");

                    b.ToTable("real_estate_object_document", (string)null);
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.RealEstateObjectPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("file_name");

                    b.Property<int?>("ObjectId")
                        .HasColumnType("integer")
                        .HasColumnName("object_id");

                    b.HasKey("Id")
                        .HasName("real_estate_object_photo_pkey");

                    b.HasIndex("ObjectId");

                    b.ToTable("real_estate_object_photo", (string)null);
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.RealEstateObjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("real_estate_object_type_pkey");

                    b.ToTable("real_estate_object_type", (string)null);
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Login")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("login");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("middle_name");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("user_pkey");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.Client", b =>
                {
                    b.HasOne("RealtorSystemDesk.Database.Gender", "Gender")
                        .WithMany("Clients")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("client_gender_id_fkey");

                    b.HasOne("RealtorSystemDesk.Database.Passport", "Passport")
                        .WithOne("Client")
                        .HasForeignKey("RealtorSystemDesk.Database.Client", "PassportId")
                        .IsRequired()
                        .HasConstraintName("client_passport_id_fkey");

                    b.HasOne("RealtorSystemDesk.Database.User", "User")
                        .WithMany("Clients")
                        .HasForeignKey("UserId")
                        .HasConstraintName("client___fk");

                    b.Navigation("Gender");

                    b.Navigation("Passport");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.ClientDocument", b =>
                {
                    b.HasOne("RealtorSystemDesk.Database.Client", "Client")
                        .WithMany("ClientDocuments")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("client_document_client_id_fkey");

                    b.HasOne("RealtorSystemDesk.Database.Document", "Document")
                        .WithMany("ClientDocuments")
                        .HasForeignKey("DocumentId")
                        .HasConstraintName("client_document_document_id_fkey");

                    b.Navigation("Client");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.Contract", b =>
                {
                    b.HasOne("RealtorSystemDesk.Database.Client", "Client")
                        .WithMany("Contracts")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("contract_client_id_fkey");

                    b.HasOne("RealtorSystemDesk.Database.User", "Employee")
                        .WithMany("Contracts")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("contract_employee_id_fkey");

                    b.HasOne("RealtorSystemDesk.Database.ContractType", "Type")
                        .WithMany("Contracts")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("contract_type_id_fkey");

                    b.Navigation("Client");

                    b.Navigation("Employee");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.ContractDocument", b =>
                {
                    b.HasOne("RealtorSystemDesk.Database.Contract", "Contract")
                        .WithMany("ContractDocuments")
                        .HasForeignKey("ContractId")
                        .HasConstraintName("contract_document_contract_id_fkey");

                    b.HasOne("RealtorSystemDesk.Database.Document", "Document")
                        .WithMany("ContractDocuments")
                        .HasForeignKey("DocumentId")
                        .HasConstraintName("contract_document_document_id_fkey");

                    b.Navigation("Contract");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.RealEstateObject", b =>
                {
                    b.HasOne("RealtorSystemDesk.Database.Contract", "Contract")
                        .WithOne("RealEstateObject")
                        .HasForeignKey("RealtorSystemDesk.Database.RealEstateObject", "ContractId")
                        .IsRequired()
                        .HasConstraintName("real_estate_object_contract_id_fkey");

                    b.HasOne("RealtorSystemDesk.Database.RealEstateObjectType", "ObjectTypeNavigation")
                        .WithMany("RealEstateObjects")
                        .HasForeignKey("ObjectType")
                        .HasConstraintName("real_estate_object_object_type_fkey");

                    b.Navigation("Contract");

                    b.Navigation("ObjectTypeNavigation");
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.RealEstateObjectDocument", b =>
                {
                    b.HasOne("RealtorSystemDesk.Database.Document", "Document")
                        .WithMany("RealEstateObjectDocuments")
                        .HasForeignKey("DocumentId")
                        .HasConstraintName("real_estate_object_document_document_id_fkey");

                    b.HasOne("RealtorSystemDesk.Database.RealEstateObject", "RealEstateObject")
                        .WithMany("RealEstateObjectDocuments")
                        .HasForeignKey("RealEstateObjectId")
                        .HasConstraintName("real_estate_object_document_real_estate_object_id_fkey");

                    b.Navigation("Document");

                    b.Navigation("RealEstateObject");
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.RealEstateObjectPhoto", b =>
                {
                    b.HasOne("RealtorSystemDesk.Database.RealEstateObject", "Object")
                        .WithMany("RealEstateObjectPhotos")
                        .HasForeignKey("ObjectId")
                        .HasConstraintName("real_estate_object_photo_object_id_fkey");

                    b.Navigation("Object");
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.Client", b =>
                {
                    b.Navigation("ClientDocuments");

                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.Contract", b =>
                {
                    b.Navigation("ContractDocuments");

                    b.Navigation("RealEstateObject");
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.ContractType", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.Document", b =>
                {
                    b.Navigation("ClientDocuments");

                    b.Navigation("ContractDocuments");

                    b.Navigation("RealEstateObjectDocuments");
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.Gender", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.Passport", b =>
                {
                    b.Navigation("Client");
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.RealEstateObject", b =>
                {
                    b.Navigation("RealEstateObjectDocuments");

                    b.Navigation("RealEstateObjectPhotos");
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.RealEstateObjectType", b =>
                {
                    b.Navigation("RealEstateObjects");
                });

            modelBuilder.Entity("RealtorSystemDesk.Database.User", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
